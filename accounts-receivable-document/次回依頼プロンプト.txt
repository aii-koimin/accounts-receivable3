# 次回依頼プロンプト - 入金差異管理システム完全構築

## 🎯 構築目標
入金差異管理システムを **ゼロベース** から完全構築してください。

## 📋 構築仕様
Ver2.1実装対応版ドキュメント群（8種）に基づいて、**100%同等システム** を構築してください：

### 📄 参照ドキュメント
1. **01_業務フロー完全版_Ver2.1_実装対応版.md** - 業務手順・API呼び出し
2. **02_DB_API完全実装書_Ver2.1_実装対応版.md** - データベース・26API仕様  
3. **03_Excel取込完全実装書_Ver2.1_実装対応版.md** - Excel処理・780行実装
4. **04_メール送信完全実装書_Ver2.1_実装対応版.md** - 750行email.ts・SMTP設定
5. **05_編集削除完全実装書_Ver2.1_実装対応版.md** - CRUD・655行実装
6. **06_UI完全実装書_Ver2.1_実装対応版.md** - React・3表示モード・進捗バー
7. **07_環境構築完全自動化書_Ver2.1_実装対応版.md** - Docker・自動セットアップ
8. **08_テスト完全実装書_Ver2.1_実装対応版.md** - テスト仕様・品質保証

### 🔧 技術スタック（実装済み仕様）
- **Frontend**: React 18.2 + TypeScript 5.0 + Tailwind CSS + Vite
- **Backend**: Node.js 18+ + Express.js 4.18.2 + TypeScript 5.3.3
- **Database**: Prisma ORM 5.8.1 + PostgreSQL/SQLite
- **Infrastructure**: Docker + Docker Compose + 自動化スクリプト

### ⭐ 重要な実装機能
1. **5ステップ進捗管理** - 心理的負担軽減UI
2. **AI自律処理70%** - 3段階介入レベル（ai_autonomous/ai_assisted/human_required）
3. **Excel差異データ取り込み** - 966行テストデータ対応
4. **メール自動生成・送信** - SMTP詳細設定・TLS/SSL対応
5. **3つの表示モード** - 列表・ブロック・テーブル切り替え
6. **CRUD完全実装** - 楽観的ロック・CASCADE削除・監査証跡

### 📊 データ仕様
- **Prismaスキーマ**: 14テーブル・複雑リレーション
- **API エンドポイント**: 26個（実測）
- **実装コード行数**: 1,966行以上（実測）
  - discrepancies.ts: 655行
  - email.ts: 750行  
  - dataImport.ts: 561行

### 🎯 構築アプローチ
1. **完全自動セットアップ** - setup.sh実行でワンクリック構築
2. **段階的構築** - Database → Backend API → Frontend UI → 統合テスト
3. **実装検証** - 各ドキュメントの実装コードを正確に再現
4. **動作確認** - Excel取り込み・メール送信・AI処理の統合テスト

### 🚀 期待成果
- ローカル環境での完全動作システム（http://localhost:3000）
- 管理者ログイン: admin@ar-system.com / password123
- サンプルデータ自動投入・即座利用可能
- Ver2.1ドキュメント仕様との100%一致

## 📝 補足
- 各ドキュメントの「実装済み」コード例を正確に実装してください
- AI自律処理・確信度判定・エスカレーション機能も完全実装
- テストデータ「未入金及び過入金管理テストデータ.xlsx」を活用してください

---

**指示**: 上記仕様に基づいて、入金差異管理システムを **ゼロベース** から完全構築してください。Ver2.1実装対応版ドキュメント群が完全なリファレンスです。